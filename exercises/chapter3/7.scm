#lang racket
#|
(define (make-account balance passwords)
  (define (withdraw amount)
    (if (>= balance amount)
        (begin (set! balance (- balance amount))
               balance)
        "Insufficient funds"))
  (define (deposit amount)
    (set! balance (+ balance amount))
    balance)
  (define (add-password new-password)
    (set! passwords (cons new-password passwords))
    dispatch)
  (define (dispatch pwd m)
    (if (not (eq? false (memq pwd passwords)))
        (cond ((eq? m 'withdraw) withdraw)
              ((eq? m 'deposit) deposit)
              ((eq? m 'add-password) add-password)
              (else (error "Unknown request -- MAKE-ACCOUNT"
                           m)))
        (error "Incorrect password")))
  (unless (pair? passwords)
    (set! passwords (list passwords)))
  dispatch)
(define (make-joint oacc password new-password)
  ((oacc password 'add-password) new-password))
|#

(define (make-account balance password)
  (define (withdraw amount)
    (if (>= balance amount)
        (begin (set! balance (- balance amount))
               balance)
        "Insufficient funds"))
  (define (deposit amount)
    (set! balance (+ balance amount))
    balance)
  (define (dispatch pwd m)
    (if (eq? pwd password)
        (cond ((eq? m 'withdraw) withdraw)
          ((eq? m 'deposit) deposit)
          (else (error "Unknown request -- MAKE-ACCOUNT"
                       m)))
        (error "Incorrect password")))
  dispatch)
(define (make-joint oacc password new-password)
  (lambda (pwd m)
    (when (not (eq? pwd new-password))
      (error "Incorrect password for joint account"))
    (oacc password m)))